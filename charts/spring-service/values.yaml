# how to call deployment, service and ingress
serviceName: ""

# namespace to use, typically team-<yourteamname>
namespace: ""

clusterName: "" # required, to be filled in by helm template argument [like image.tag] (example: staging)
secretsRoleArn: "" # required, to be filled in by <env>.values.yaml (example: arn:aws:iam::1234567890:role/read-secrets-role-staging-team-superpower)

# what Docker image to run
image:
  repository: "" # example: docker.pkg.github.com/itdesign-gmbh/mp-templatetiger/mp-templatetiger
  tag: "" # Tag is normally configured during deployment

# how many replicas to launch
replicaCount: 2

livenessProbe:
  delay: 30 # delay after which liveness probe get armed
readinessProbe:
  delay: 30 # delay after which readiness probe get armed

# k8s resource definitions for required minimum and maximum growth
resources:
  memory: 600Mi
  cpu:
    guarantee: 100m
    limit: 1000m

ingress:
  host: "" # Hostname under which the service is available, normally configured per deployment target

env:
  # name of env variable that should also receive the external base url
  # copyOwnExternalBaseURLIn: "SERVICE_BASE_URL_EXTERNAL"

  # Use this to provision a JDBC data source from a secret containing "jdbc-url", "username" & "password"
  # or remove it if it isn't required
  springDatasourceFromSecret: "" # "rds/templatetiger"
  springRabbitMQSecret: false # set to true if you want RabbitMQ credentials that work out of the box with Spring

  fromSecret: {}
  #  SOME_SECRET:
  #    parameterName: other-system/secret

  # custom k8s env definition
  additional: {}
  #  SOME_VARIABLE:
  #    value: 'some-value'

alertingRules: []
# - name: HighLatency
#   expr: avg(service_latency[5m]) > 2
#   for: 5m # optional
#   summary: SLO for Project Fields ACL broken
#   description: 95 percentile for Project Fields ACL endpoint was slower than 200ms in the last 1 hour
#   playbook_url: http://xconfluence/x/aBcDeFg
