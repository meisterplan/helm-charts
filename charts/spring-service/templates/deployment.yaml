kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{ .Values.serviceName }}-{{ required "Image Tag must be set!" .Values.image.tag }}"
  namespace: "{{ required "Namespace must be set!" .Values.namespace }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.serviceName }}
      app.kubernetes.io/version: {{ .Values.image.tag }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.serviceName }}
        app.kubernetes.io/version: {{ .Values.image.tag }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "{{ required "Prometheus Endpoint must be set!" .Values.prometheus.endpoint }}"
        prometheus.io/port: "{{ required "Prometheus Port must be set!" .Values.prometheus.port }}"
    spec:
      imagePullSecrets:
        - name: docker.pkg.github.com
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - {{ .Values.serviceName }}
      containers:
        - name: {{ .Values.serviceName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: {{ required "CPU guarantee must be set!" .Values.resources.cpu.guarantee }}
              memory: {{ required "Memory requirement must be set!" .Values.resources.memory }}
            limits:
              cpu: {{ required "CPU limit must be set!" .Values.resources.cpu.limit }}
              memory: {{ required "Memory requirement must be set!" .Values.resources.memory }}

          livenessProbe:
            exec:
              command: ["check", "run", "-type", "liveness"]
            initialDelaySeconds: {{ .Values.livenessProbe.delay }}
          readinessProbe:
            exec:
              command: ["check", "run", "-type", "readiness"]
            initialDelaySeconds: {{ .Values.readinessProbe.delay }}
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "15"]
          env:
            - name: "SPRING_PROFILES_ACTIVE"
              value: "prod"
            - name: "CLUSTER_NAME"
              valueFrom:
                configMapKeyRef:
                  name: region
                  key: cluster-name
            - name: 'SENTRY_DSN'
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: "dsn-{{ .Values.serviceName }}"
            {{- if .Values.env.springDatasourceFromSecret }}
            - name: "SPRING_DATASOURCE_URL"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.springDatasourceFromSecret }}
                  key: jdbc-url
            - name: "SPRING_DATASOURCE_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.springDatasourceFromSecret }}
                  key: username
            - name: "SPRING_DATASOURCE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.springDatasourceFromSecret }}
                  key: password
            {{- end }}
            - name: "SERVICE_OAUTH2_PUBLIC_KEY"
              valueFrom:
                secretKeyRef:
                  name: authenticorn
                  key: public-key
            {{- if .Values.env.copyOwnExternalBaseURLIn }}
            - name: "{{ .Values.env.copyOwnExternalBaseURLIn }}"
              value: "https://{{ .Values.ingress.host }}"
            {{- end }}
{{- if .Values.env.additional }}
{{ toYaml .Values.env.additional | indent 12 }}
{{- end }}
{{- if .Values.env.additionalPerRegion }}
{{ toYaml .Values.env.additionalPerRegion | indent 12 }}
{{- end }}