apiVersion: "kubernetes-client.io/v1"
kind: ExternalSecret
metadata:
  namespace: {{.Values.namespace }}
  name: {{ .Values.serviceName }}-external-secret
spec:
  backendType: systemManager
  roleArn: {{ required "secretsRoleArn must be set!" .Values.secretsRoleArn }}
  data:
    - name: "sentry/dsn-{{ .Values.serviceName }}"
      key: "/{{ required "clusterName must be set!" .Values.clusterName }}/sentry/dsn-{{ .Values.serviceName }}"
    - name: "authenticorn/public-key"
      key: "/{{ .Values.clusterName }}/authenticorn/public-key"
  {{- if .Values.env.springDatasourceFromSecret }}
    - name: "{{ .Values.env.springDatasourceFromSecret }}/jdbc-url"
      key: "/{{ .Values.clusterName }}/{{ .Values.env.springDatasourceFromSecret }}/jdbc-url"
    - name: "{{ .Values.env.springDatasourceFromSecret }}/username"
      key: "/{{ .Values.clusterName }}/{{ .Values.env.springDatasourceFromSecret }}/username"
    - name: "{{ .Values.env.springDatasourceFromSecret }}/password"
      key: "/{{ .Values.clusterName }}/{{ .Values.env.springDatasourceFromSecret }}/password"
  {{- end }}
  {{- if .Values.env.springRabbitMQSecret }}
    - name: "rabbitmq/jdbc-url"
      key: "/{{ .Values.clusterName }}/rabbitmq/hostname"
    - name: "rabbitmq/username"
      key: "/{{ .Values.clusterName }}/rabbitmq/username"
    - name: "rabbitmq/password"
      key: "/{{ .Values.clusterName }}/rabbitmq/password"
  {{- end }}
  {{- range .Values.env.fromSecret }}
    - name: "{{ .parameterName }}"
      key: "{{ $.Values.clusterName }}/{{ .parameterName }}"
  {{- end }}
