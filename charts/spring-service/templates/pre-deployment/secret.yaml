{{- if and .Values.env.springDatasourceFromSecret .Values.env.springDatasourceFromSecretWithRLS }}
{{ fail "You cannot set both springDatasourceFromSecret and springDatasourceFromSecretWithRLS at the same time" }}
{{- end}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.serviceName }}-external-secret
spec:
  refreshInterval: "5m"
  secretStoreRef:
    name: secret-store
    kind: SecretStore
  data:
    - secretKey: "SENTRY_DSN"
      remoteRef:
        key: "/{{ required "envName must be set!" .Values.envName }}/sentry/dsn-{{ .Values.serviceName }}"
    - secretKey: "SERVICE_OAUTH2_PUBLIC_KEY"
      remoteRef:
        key: "/{{ .Values.envName }}/authenticorn/public-key"
  {{- if .Values.env.springDatasourceFromSecret }}
    - secretKey: "SPRING_DATASOURCE_URL"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecret }}/jdbc-url"
    - secretKey: "SPRING_DATASOURCE_USERNAME"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecret }}/username"
    - secretKey: "SPRING_DATASOURCE_PASSWORD"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecret }}/password"
  {{- else if .Values.env.springDatasourceFromSecretWithRLS }}
    - secretKey: "SPRING_DATASOURCE_URL"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecretWithRLS }}/jdbc-url"
    - secretKey: "SPRING_DATASOURCE_USERNAME"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecretWithRLS }}/rls-username"
    - secretKey: "SPRING_DATASOURCE_PASSWORD"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecretWithRLS }}/rls-password"
    - secretKey: "SPRING_FLYWAY_USER"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecretWithRLS }}/username"
    - secretKey: "SPRING_FLYWAY_PASSWORD"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.env.springDatasourceFromSecretWithRLS }}/password"
  {{- end }}
  {{- if .Values.env.springRabbitMQSecret }}
    - secretKey: "SPRING_RABBITMQ_HOST"
      remoteRef:
        key: "/{{ .Values.envName }}/rabbitmq/hostname"
    - secretKey: "SPRING_RABBITMQ_SSL_ENABLED"
      remoteRef:
        key: "/{{ .Values.envName }}/rabbitmq/ssl"
    - secretKey: "SPRING_RABBITMQ_USERNAME"
      remoteRef:
        key: "/{{ .Values.envName }}/rabbitmq/username"
    - secretKey: "SPRING_RABBITMQ_PASSWORD"
      remoteRef:
        key: "/{{ .Values.envName }}/rabbitmq/password"
  {{- end }}
   {{- if .Values.ingress.basicAuthSecretParameterName }}
    - secretKey: "auth"
      remoteRef:
        key: "/{{ .Values.envName }}/{{ .Values.ingress.basicAuthSecretParameterName }}"
  {{- end }}
  {{- range $key, $value := .Values.env.fromSecret }}
    - secretKey: "{{ $key }}"
      remoteRef:
        key: "/{{ $.Values.envName }}/{{ $value.parameterName }}"
  {{- end }}
