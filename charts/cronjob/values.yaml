# how to call cronJob
cronJobName: ""

# namespace to use, typically team-<yourteamname>
namespace: ""

envName: "" # required to be filled in by helm template argument [like image.tag] (example: staging)

# The serviceAccount.enabled variable will create a service account
# bound to the pods so that they can assume the configured role automatically.
# The role must be named `k8s-<envName>-<roleName>` and needs a Trust Policy for the created service account.
# (i.e. `TrustPolicy.forK8sServiceAccount()` in mp-aws-iam-terraform)
# Note: Enabling it requires awsAccountId to be set as well (escape it as string, or it will be treated as float).
serviceAccount:
  enabled: false
  roleName: ""
awsAccountId: ""

# schedule to run in cronjob-format, see https://crontab.guru/ e.g. "25 1 * * */2"
schedule: ""

# how often to re-attempt running the job (at each scheduled point in time) - keep at 0, if the job should be run only once
retriesBeforeFailure: 0

# what Docker image to run
image:
  repository: "" # example: ghcr.io/itdesign-gmbh/mp-templatetiger/mp-templatetiger
  tag: "" # Tag is normally configured during deployment

# list of startup argument(s) for the job
args: []

# k8s resource definitions for required minimum and maximum growth
resources:
  memory: 64Mi
  cpu:
    guarantee: 100m

env:
  fromSecret: {}
  #  SOME_SECRET:
  #    parameterName: other-system/secret

  # custom k8s env definition
  additional: {}
  #  SOME_VARIABLE:
  #    value: 'some-value'

